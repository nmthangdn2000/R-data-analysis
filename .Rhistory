summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Item)
unique(basket$Nationality)
tagAge <- c()
for (i in basket$Age) {
a <- 0
if(i < 21) a <- 1
else if(i > 21 & i < 26) a <- 2
else a <- 3
tagAge <- c(tagAge, a)
}
basket$Age <- tagAge
basketCluster <- kmeans(basket[, 8:10], 3, nstart = 20)
table(basketCluster$cluster, basket$Nationality)
plot(basket$Payment, basket$Age, col = basket$Nationality, pch = basketCluster$cluster)
basket <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv")
str(basket)
summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Item)
unique(basket$Nationality)
# tagAge <- c()
# for (i in basket$Age) {
#   a <- 0
#   if(i < 21) a <- 1
#   else if(i > 21 & i < 26) a <- 2
#   else a <- 3
#   tagAge <- c(tagAge, a)
# }
# basket$Age <- tagAge
basketCluster <- kmeans(basket[, 8:10], 3, nstart = 20)
table(basketCluster$cluster, basket$Nationality)
plot(basket$Payment, basket$Age, col = basket$Nationality, pch = basketCluster$cluster)
unique(basket$Payment)
# basket$period_day <- period_day
# basket$weekday_weekend <- weekday_weekend
# basket$Nationality <- Nationality
# basket$Payment <- Payment
#
# basket$Time <- NULL
# basket$Date <- NULL
#
# View(basket)
# write.csv(basket,"F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv", row.names = FALSE)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
unique(basket2$Payment)
basketCluster <- kmeans(basket[, 8:10], 2, nstart = 20)
table(basketCluster$cluster, basket$Nationality)
plot(basket$Payment, basket$Age, col = basket$Nationality, pch = basketCluster$cluster)
basketCluster <- kmeans(basket[, 8:10], 4, nstart = 20)
table(basketCluster$cluster, basket$Nationality)
plot(basket$Payment, basket$Age, col = basket$Nationality, pch = basketCluster$cluster)
basketCluster <- kmeans(basket[, 8:10],6, nstart = 20)
table(basketCluster$cluster, basket$Nationality)
plot(basket$Payment, basket$Age, col = basket$Nationality, pch = basketCluster$cluster)
basketCluster <- kmeans(basket[, 8],5, nstart = 20)
basketCluster <- kmeans(basket[, 8:NULL],5, nstart = 20)
basket <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv")
str(basket)
summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Payment)
unique(basket$Nationality)
# tagAge <- c()
# for (i in basket$Age) {
#   a <- 0
#   if(i == 1) sample.int(16, 21, replace = TRUE)
#   else if(i > 21 & i < 26) a <- 2
#   else a <- 3
#   tagAge <- c(tagAge, a)
# }
# basket$Age <- tagAge
basketCluster <- kmeans(basket[, 8:9],5, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$Payment, basket$Nationality, col = basket$Age, pch = basketCluster$cluster)
tagAge <- c()
for (i in basket$Age) {
a <- 0
if(i == 1) sample.int(16, 21, replace = TRUE)
else if(i > 21 & i < 26) a <- 2
else a <- 3
tagAge <- c(tagAge, a)
}
basket$Age <- tagAge
basketCluster <- kmeans(basket[, 8:9],5, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$Payment, basket$Nationality, col = basket$Age, pch = basketCluster$cluster)
basketCluster <- kmeans(basket[, 8:9],3, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$Payment, basket$Nationality, col = basket$Age, pch = basketCluster$cluster)
basket <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv")
str(basket)
summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Payment)
unique(basket$Nationality)
tagAge <- c()
for (i in basket$Age) {
a <- 0
if(i == 1) a <- sample.int(16, 21, replace = TRUE)
else if(i == 2) a <- sample.int(18, 26, replace = TRUE)
else a <- sample.int(16, 30, replace = TRUE)
tagAge <- c(tagAge, a)
}
basket$Age <- tagAge
basketCluster <- kmeans(basket[, 8:9],3, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$Payment, basket$Nationality, col = basket$Age, pch = basketCluster$cluster)
basket <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv")
str(basket)
summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Payment)
unique(basket$Nationality)
tagAge <- c()
for (i in basket$Age) {
a <- 0
if(i == 1) a <- sample.int(16, 21, replace = TRUE)
else if(i == 2) a <- sample.int(18, 26, replace = TRUE)
else a <- sample.int(16, 30, replace = TRUE)
tagAge <- c(tagAge, a)
}
basket$Age <- tagAge
basketCluster <- kmeans(basket[, 5:8], 3, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$TotalNumber, basket$Payment, col = basket$Age, pch = basketCluster$cluster)
basket <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv")
str(basket)
summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Payment)
unique(basket$Nationality)
tagAge <- c()
for (i in basket$Age) {
a <- 0
if(i == 1) a <- sample.int(16, 21, replace = TRUE)
else if(i == 2) a <- sample.int(18, 26, replace = TRUE)
else a <- sample.int(16, 30, replace = TRUE)
tagAge <- c(tagAge, a)
}
basket$Age <- tagAge
basketCluster <- kmeans(basket[, 5:8], 3, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$TotalNumber, basket$Payment, col = basket$Age, pch = basketCluster$cluster)
basket <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket2.csv")
str(basket)
summary(basket)
basket <- basket[complete.cases(basket), ]
any(is.na(basket))
set.seed(123)
unique(basket$Payment)
unique(basket$Nationality)
tagAge <- c()
for (i in basket$Age) {
a <- 0
if(i == 1) a <- sample.int(16, 21, replace = TRUE)
else if(i == 2) a <- sample.int(18, 26, replace = TRUE)
else a <- sample.int(24, 30, replace = TRUE)
tagAge <- c(tagAge, a)
}
basket$Age <- tagAge
basketCluster <- kmeans(basket[, 5:8], 3, nstart = 20)
table(basketCluster$cluster, basket$Age)
plot(basket$TotalNumber, basket$Payment, col = basket$Age, pch = basketCluster$cluster)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekend",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
total <- 0
for (d in rows$TotalNumber) {
if(!is.na(d)) total <- total + d
}
totalProduct <- c(totalProduct, total)
indexWeekend <- c(indexWeekend, index)
index <- index + 1
}
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
x <- dataWeekend$weekend
y <- dataWeekend$amout
hoiquy <- lm(y ~ x)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(y ~ x, data=dataWeekend)
abline(hoiquy,col="red")
summary(hoiquy)
a <- data.frame(x = 31)
predictData<- predict(hoiquy, a )
print(predictData)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekend",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
for (d in rows$TotalNumber) {
if(!is.na(d)){
totalProduct <- c(totalProduct, d)
indexWeekend <- c(indexWeekend, index)
}
}
index <- index + 1
}
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
x <- dataWeekend$weekend
y <- dataWeekend$amout
hoiquy <- lm(y ~ x)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(y ~ x, data=dataWeekend)
abline(hoiquy,col="red")
summary(hoiquy)
a <- data.frame(x = 31)
predictData<- predict(hoiquy, a )
print(predictData)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekend",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
total <- 0
for (d in rows$TotalNumber) {
if(!is.na(d)) total <- total + d
}
totalProduct <- c(totalProduct, total)
indexWeekend <- c(indexWeekend, index)
index <- index + 1
}
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
x <- dataWeekend$weekend
y <- dataWeekend$amout
hoiquy <- lm(y ~ x)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(y ~ x, data=dataWeekend)
abline(hoiquy,col="red")
summary(hoiquy)
a <- data.frame(x = 31)
predictData<- predict(hoiquy, a )
print(predictData)
a <- data.frame(x = c(31,33,10))
predictData<- predict(hoiquy, a )
print(predictData)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekday",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
total <- 0
for (d in rows$TotalNumber) {
if(!is.na(d)) total <- total + d
}
totalProduct <- c(totalProduct, total)
indexWeekend <- c(indexWeekend, index)
index <- index + 1
}
# for (data in dateFilter$mydates) {
#   rows <- weekend[weekend$Date == data,]
#   total <- 0
#   for (d in rows$TotalNumber) {
#     if(!is.na(d)) total <- total + d
#   }
#   totalProduct <- c(totalProduct, total)
#   indexWeekend <- c(indexWeekend, index)
#   index <- index + 1
# }
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
x <- dataWeekend$weekend
y <- dataWeekend$amout
hoiquy <- lm(y ~ x)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(y ~ x, data=dataWeekend)
abline(hoiquy,col="red")
summary(hoiquy)
a <- data.frame(x = c(31,33,10))
predictData<- predict(hoiquy, a )
print(predictData)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekday",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
total <- 0
for (d in rows$TotalNumber) {
if(!is.na(d)) total <- total + d
}
totalProduct <- c(totalProduct, total)
indexWeekend <- c(indexWeekend, index)
index <- index + 1
}
# for (data in dateFilter$mydates) {
#   rows <- weekend[weekend$Date == data,]
#   total <- 0
#   for (d in rows$TotalNumber) {
#     if(!is.na(d)) total <- total + d
#   }
#   totalProduct <- c(totalProduct, total)
#   indexWeekend <- c(indexWeekend, index)
#   index <- index + 1
# }
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
weekend <- dataWeekend$weekend
amout <- dataWeekend$amout
hoiquy <- lm(y ~ x)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(amout ~ weekend, data=dataWeekend)
abline(hoiquy,col="red")
summary(hoiquy)
a <- data.frame(weekend = c(31,33,10))
predictData<- predict(hoiquy, a )
print(predictData)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekday",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
total <- 0
for (d in rows$TotalNumber) {
if(!is.na(d)) total <- total + d
}
totalProduct <- c(totalProduct, total)
indexWeekend <- c(indexWeekend, index)
index <- index + 1
}
# for (data in dateFilter$mydates) {
#   rows <- weekend[weekend$Date == data,]
#   total <- 0
#   for (d in rows$TotalNumber) {
#     if(!is.na(d)) total <- total + d
#   }
#   totalProduct <- c(totalProduct, total)
#   indexWeekend <- c(indexWeekend, index)
#   index <- index + 1
# }
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
weekend <- dataWeekend$weekend
amout <- dataWeekend$amout
hoiquy <- lm(y ~ x)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(amout ~ weekend, data=dataWeekend)
basket2 <- read.csv("F:/kì 1 năm 4/Chuyên đề/dashboard/dataset/basket.csv")
weekend <- basket2[basket2$weekday_weekend == "weekday",]
library(tibbletime)
weekend$Date <- as.Date(weekend$Date, "%m/%d/%Y")
mydates <- unique(weekend$Date)
mydates <- as.Date(mydates, "%m/%d/%Y")
dfDate <- data.frame(mydates)
dfDate <- as_tbl_time(dfDate, index = mydates)
dateFilter <- filter_time(dfDate, "2017" ~ "2017")
dateFilter
totalProduct <- c()
indexWeekend <- c()
index <- 1
for (data in dateFilter$mydates) {
rows <- weekend[weekend$Date == data,]
total <- 0
for (d in rows$TotalNumber) {
if(!is.na(d)) total <- total + d
}
totalProduct <- c(totalProduct, total)
indexWeekend <- c(indexWeekend, index)
index <- index + 1
}
# for (data in dateFilter$mydates) {
#   rows <- weekend[weekend$Date == data,]
#   total <- 0
#   for (d in rows$TotalNumber) {
#     if(!is.na(d)) total <- total + d
#   }
#   totalProduct <- c(totalProduct, total)
#   indexWeekend <- c(indexWeekend, index)
#   index <- index + 1
# }
indexWeekend
totalProduct
dataWeekend <- data.frame(weekend = indexWeekend, amout = totalProduct)
dataWeekend
weekend <- dataWeekend$weekend
amout <- dataWeekend$amout
hoiquy <- lm(amout ~ weekend)
# y = 1.56482 + 0.02239.x
# Estimate: Hệ số beta của mô hình hồi quy
# Std,Error: Độ lệch chuẩn của ước lượng hệ số beta tương ứng
# t-value = Estimate/Std.Error: Là giá trị t trong kiểm định
plot(amout ~ weekend, data=dataWeekend)
abline(hoiquy,col="red")
summary(hoiquy)
a <- data.frame(weekend = c(31,33,10))
predictData<- predict(hoiquy, a )
print(predictData)
shiny::runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
source("F:/kì 1 năm 4/Chuyên đề/dashboard/service/home.service.r", encoding = 'UTF-8')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
runApp('F:/kì 1 năm 4/Chuyên đề/dashboard')
